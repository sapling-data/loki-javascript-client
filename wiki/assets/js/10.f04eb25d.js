(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{384:function(e,t,a){"use strict";a.r(t);var s=a(44),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"referencing-loki-apis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#referencing-loki-apis"}},[e._v("#")]),e._v(" Referencing Loki APIs")]),e._v(" "),a("h2",{attrs:{id:"module-based-syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-based-syntax"}},[e._v("#")]),e._v(" Module-based syntax")]),e._v(" "),a("p",[a("code",[e._v("loki-javascript-client")]),e._v(" exposes multiple APIs that are organized into distinct modules. The available APIs ("),a("code",[e._v("data")]),e._v(", "),a("code",[e._v("environ")]),e._v(", "),a("code",[e._v("model")]),e._v(", "),a("code",[e._v("urn")]),e._v(", and "),a("code",[e._v("web")]),e._v(") each have their own module and those modules exist as properties on the Loki class. Each API module exports a class that contains all the methods for that API. So, for example, referencing the "),a("code",[e._v("data")]),e._v(" API is as simple as using "),a("code",[e._v("loki.data.methodName")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"one-step-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#one-step-configuration"}},[e._v("#")]),e._v(" One step configuration")]),e._v(" "),a("p",[e._v("All the API classes are configured when an instance of the Loki class is created. The "),a("RouterLink",{attrs:{to:"/configuration/initializing-loki.html"}},[e._v("initial configuration object")]),e._v(" contains all the information that is necessary to configure the entire set of available APIs.")],1)])}),[],!1,null,null,null);t.default=o.exports}}]);